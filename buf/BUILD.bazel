load("//:defs.bzl", "proto_plugin")

# Use an alias to resolve platform transitions and do the select based on the execution platform.
# Otherwise, if we put the select in the tool, then it selects based on the target platform instead. 
alias(
    name = "proto_gen_buf_breaking",
    actual = select({
        "@bazel_tools//src/conditions:darwin_arm64": "@protoc_gen_buf_breaking_darwin_arm64//file",
        "@bazel_tools//src/conditions:darwin_x86_64": "@protoc_gen_buf_breaking_darwin_x86_64//file",
        "@bazel_tools//src/conditions:linux_x86_64": "@protoc_gen_buf_breaking_linux_x86_64//file",
    }),
)

alias(
    name = "proto_gen_buf_lint",
    actual = select({
        "@bazel_tools//src/conditions:darwin_arm64": "@protoc_gen_buf_lint_darwin_arm64//file",
        "@bazel_tools//src/conditions:darwin_x86_64": "@protoc_gen_buf_lint_darwin_x86_64//file",
        "@bazel_tools//src/conditions:linux_x86_64": "@protoc_gen_buf_lint_linux_x86_64//file",
    }),
)

proto_plugin(
    name = "breaking_plugin",
    quirks = ["QUIRK_DIRECT_MODE"],
    separate_options_flag = True,
    tool = ":proto_gen_buf_breaking",
    visibility = ["//visibility:public"],
)

proto_plugin(
    name = "lint_plugin",
    quirks = ["QUIRK_DIRECT_MODE"],
    separate_options_flag = True,
    tool = ":proto_gen_buf_lint",
    visibility = ["//visibility:public"],
)
